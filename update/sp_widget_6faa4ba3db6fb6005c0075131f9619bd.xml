<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope) {
	var c = this;  
	
	$scope.remove = function (scope) {
		scope.remove();
	};

	$scope.toggle = function (scope) {
		scope.toggle();
	};

	$scope.moveLastToTheBeginning = function () {
		var a = $scope.data.pop();
		$scope.data.splice(0, 0, a);
	};

	$scope.newSubItem = function (scope) {
		var nodeData = scope.$modelValue;
		nodeData.nodes.push({
			id: nodeData.id * 10 + nodeData.nodes.length,
			title: nodeData.title + '.' + (nodeData.nodes.length + 1),
			nodes: []
		});
	};

	$scope.collapseAll = function () {
		$scope.$broadcast('angular-ui-tree:collapse-all');
	};

	$scope.expandAll = function () {
		$scope.$broadcast('angular-ui-tree:expand-all');
	};
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.btn {
    margin-right: 8px;
}

.angular-ui-tree-handle {
    background: #f8faff;
    border: 1px solid #dae2ea;
    color: #7c9eb2;
    padding: 10px 10px;
}

.angular-ui-tree-handle:hover {
    color: #438eb9;
    background: #f4f6f7;
    border-color: #dce2e8;
}

.angular-ui-tree-placeholder {
    background: #f0f9ff;
    border: 2px dashed #bed2db;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

tr.angular-ui-tree-empty {
    height:100px
}

.group-title {
    background-color: #687074 !important;
    color: #FFF !important;
}


/* --- Tree --- */
.tree-node {
    border: 1px solid #dae2ea;
    background: #f8faff;
    color: #7c9eb2;
}

.nodrop {
    background-color: #f2dede;
}

.tree-node-content {
    margin: 10px;
}
.tree-handle {
    padding: 10px;
    background: #428bca;
    color: #FFF;
    margin-right: 10px;
}

.angular-ui-tree-handle:hover {
}

.angular-ui-tree-placeholder {
    background: #f0f9ff;
    border: 2px dashed #bed2db;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}</css>
        <data_table>sp_instance_vlist</data_table>
        <demo_data/>
        <description>Tree to display project and project task info through Service Portal</description>
        <docs/>
        <field_list>title,order,color,display_field,filter,table,sp_page,order_direction,maximum_entries,order_by,class_name</field_list>
        <has_preview>false</has_preview>
        <id>project-tree</id>
        <internal>false</internal>
        <link/>
        <name>Project Tree</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[function loadChildrenRecursive(data, childRecord) {
	var pTask = {};
	pTask.id = childRecord.getValue('sys_id');
	if (options.display_field) {
		pTask.title = childRecord.getDisplayValue(options.display_field);
	}	
	pTask.nodes = [];
	
	var gChildren = new GlideRecordSecure(options.table); 
	gChildren.addEncodedQuery('parent=' + childRecord.sys_id);

	if (options.order_direction == "asc") {
		gChildren.orderBy(options.order_by);
	}
	else {
		gChildren.orderByDesc(options.order_by);
	}
	
	gChildren.setLimit(options.maximum_entries);
	gChildren.query();
	
	while (gChildren.next()) {
		loadChildrenRecursive(pTask.nodes, gChildren);
	}
	
	data.push(pTask);
}

(function() {
		
	if (!options.table)
		return;

	data.sp_page = $sp.getDisplayValue('sp_page'); // gets the page's ID
	
	var gr = new GlideRecordSecure(options.table); 
	if (options.filter) {
		gr.addEncodedQuery(options.filter);
	}

	if (options.order_direction == "asc") {
		gr.orderBy(options.order_by);
	}
	else {
		gr.orderByDesc(options.order_by);
	}
	
	gr.setLimit(options.maximum_entries);
	gr.query();
	
	data.projData = [];
	data.taskData = [];	
	
	while (gr.next()) {		
		loadChildrenRecursive(data.taskData, gr);
	/*	if (data.sp_page)
			record.url = "?id=" + data.sp_page + "&table=" + options.table + "&sys_id=" + record.sys_id + "&view=sp";
		else
			record.url = "";*/
	}
	
	/* todo - DO NOT HARDCODE */
	var proj = {};
			proj.id = "xxxx";
			proj.title = "Schafer Acquisition";
	    proj.nodes = data.taskData;
	
	data.projData.push(proj);	
})()]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>ros11756_admin</sys_created_by>
        <sys_created_on>2017-06-30 17:26:43</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>6faa4ba3db6fb6005c0075131f9619bd</sys_id>
        <sys_mod_count>49</sys_mod_count>
        <sys_name>Project Tree</sys_name>
        <sys_package display_value="Acquisition Console" source="x_kfna2_acqcon">ce6e3aabdb2fb6005c0075131f9619ca</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Acquisition Console">ce6e3aabdb2fb6005c0075131f9619ca</sys_scope>
        <sys_update_name>sp_widget_6faa4ba3db6fb6005c0075131f9619bd</sys_update_name>
        <sys_updated_by>wai12780</sys_updated_by>
        <sys_updated_on>2017-07-03 19:12:30</sys_updated_on>
        <template><![CDATA[<script type="text/ng-template" id="nodes_renderer.html">
  <div ui-tree-handle class="tree-node tree-node-content">
  	<a class="btn btn-success btn-xs" data-nodrag ng-click="toggle(this)">
      <span class="glyphicon"
            ng-class="{'glyphicon-chevron-right': collapsed, 'glyphicon-chevron-down': !collapsed}">
      </span>
    </a>
    {{node.title}}
  </div>
  <ol ui-tree-nodes="" ng-model="node.nodes" ng-class="{hidden: collapsed}">
    <li ng-repeat="node in node.nodes" ui-tree-node ng-include="'nodes_renderer.html'"></li>
  </ol>
</script>

<div ui-tree>
  <ol ui-tree-nodes="" ng-model="data.projData">
    <li ng-repeat="node in data.projData" ui-tree-node ng-include="'nodes_renderer.html'"></li>
  </ol>
</div>

<div>
  TEST BUTTONS
</div>
<div class="col-sm-12">
    <button ng-click="expandAll()">Expand all</button>
    <button ng-click="collapseAll()">Collapse all</button>
  </div>]]></template>
    </sp_widget>
</record_update>
